
import pandas as pd

def calculate_daily_returns(stock_df: pd.DataFrame, price_column: str = 'Close') -> pd.DataFrame:
    """
    Calculates daily percentage changes in stock prices.

    Parameters:
    - stock_df (pd.DataFrame): The stock data containing price information.
    - price_column (str): The column name for the closing price.

    Returns:
    - pd.DataFrame: The stock data with an additional 'daily_return' column.
    """
    # Validate the presence of the price column
    if price_column not in stock_df.columns:
        raise ValueError(f"The specified price column '{price_column}' does not exist in the DataFrame.")
    
    # Compute daily returns
    stock_df['daily_return'] = stock_df[price_column].pct_change()

    # Drop NaN values generated by pct_change
    stock_df.dropna(subset=['daily_return'], inplace=True)

    return stock_df

if __name__ == "__main__":
    # Example usage
    stock_file = "data/stock_prices.csv"  # Replace with your stock dataset path

    # Load stock data
    stock_data = pd.read_csv(stock_file)

    # Prepare stock data with daily returns
    stock_data = calculate_daily_returns(stock_data)

    # Display preview
    print(stock_data.head())
